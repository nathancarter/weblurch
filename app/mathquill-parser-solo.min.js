(function(){var e,a,t,o,n,i,r,u,l=[].slice;("undefined"==typeof n||null===n)&&(n=null!=(r="undefined"!=typeof module&&null!==module?module.exports:void 0)?r:window),"undefined"!=typeof require&&null!==require?(u=require("./openmath-duo"),t=u.OM,o=u.OMNode,a=require("./parsing-duo").Grammar):(a=window.Grammar,t=window.OM,o=window.OMNode),window.mathQuillToMeaning=n.mathQuillToMeaning=function(e){var a,t,o,n,i,r,u,l,d,s,c,f,m,b;if(3===e.nodeType)return""===e.textContent.trim()?[]:e.textContent;for(n=[],c=e.childNodes,i=0,l=c.length;l>i;i++)a=c[i],$(a).hasClass("selectable")||$(a).hasClass("cursor")||/width:0/.test("function"==typeof a.getAttribute?a.getAttribute("style"):void 0)||(n=n.concat(mathQuillToMeaning(a)));for(("SUP"===(f=e.tagName)||"SUB"===f)&&(o=e.tagName.toLowerCase(),$(e).hasClass("nthroot")&&(o="nthroot"),n.length>1&&(n.unshift("("),n.push(")")),n.unshift(o)),m=["fraction","overline","overarc"],r=0,d=m.length;d>r;r++)t=m[r],$(e).hasClass(t)&&(n.length>1&&(n.unshift("("),n.push(")")),n.unshift(t));for(b=["numerator","denominator"],u=0,s=b.length;s>u;u++)t=b[u],$(e).hasClass(t)&&n.length>1&&(n.unshift("("),n.push(")"));return 1===n.length?n[0]:n},n.mathQuillParser=e=new a("expression"),e.addRule("digit",/[0-9]/),e.addRule("nonnegint","digit"),e.addRule("nonnegint",["digit","nonnegint"]),e.addRule("integer","nonnegint"),e.addRule("integer",[/\u2212|-/,"nonnegint"]),e.addRule("float",["integer",/\./,"nonnegint"]),e.addRule("float",["integer",/\./]),e.addRule("infinity",[/\u221e/]),e.addRule("variable",/[a-zA-Z\u0374-\u03FF]/),e.addRule("atomic","integer"),e.addRule("atomic","float"),e.addRule("atomic","variable"),e.addRule("atomic","infinity"),e.addRule("factor","atomic"),e.addRule("factor",["atomic",/sup/,"atomic"]),e.addRule("factor",["factor",/[%]/]),e.addRule("factor",[/\$/,"factor"]),e.addRule("factor",["factor",/sup/,/\u2218/]),e.addRule("prodquo","factor"),e.addRule("prodquo",["prodquo",/[\u00f7\u00d7\u00b7]/,"factor"]),e.addRule("prodquo",[/\u2212|-/,"prodquo"]),e.addRule("sumdiff","prodquo"),e.addRule("sumdiff",["sumdiff",/[+\u00b1\u2212-]/,"prodquo"]),e.addRule("ln",[/ln/,"atomic"]),e.addRule("log",[/log/,"atomic"]),e.addRule("log",[/log/,/sub/,"atomic","atomic"]),e.addRule("prodquo","ln"),e.addRule("prodquo","log"),e.addRule("factorial",["atomic",/!/]),e.addRule("factor","factorial"),e.addRule("setdiff","variable"),e.addRule("setdiff",["setdiff",/[\u223c]/,"variable"]),e.addRule("subscripted",["atomic",/sub/,"atomic"]),e.addRule("noun","subscripted"),e.addRule("fraction",[/fraction/,/\(/,"atomic","atomic",/\)/]),e.addRule("atomic","fraction"),e.addRule("root",[/\u221a/,"atomic"]),e.addRule("root",[/nthroot/,"atomic",/\u221a/,"atomic"]),e.addRule("atomic","root"),e.addRule("decoration",[/overline/,"atomic"]),e.addRule("decoration",[/overarc/,"atomic"]),e.addRule("atomic","decoration"),e.addRule("trigfunc",[/sin|cos|tan|cot|sec|csc/]),e.addRule("trigapp",["trigfunc","prodquo"]),e.addRule("trigapp",["trigfunc",/sup/,/\(/,/-|\u2212/,/1/,/\)/,"prodquo"]),e.addRule("atomic","trigapp"),e.addRule("limit",[/lim/,/sub/,/\(/,"variable",/[\u2192]/,"expression",/\)/,"prodquo"]),e.addRule("takesleftcoeff","limit"),e.addRule("sum",[/[\u03a3]/,/sub/,/\(/,"variable",/[=]/,"expression",/\)/,/sup/,"atomic","prodquo"]),e.addRule("sum",[/[\u03a3]/,/sup/,"atomic",/sub/,/\(/,"variable",/[=]/,"expression",/\)/,"prodquo"]),e.addRule("takesleftcoeff","sum"),e.addRule("differential",[/d/,"atomic"]),e.addRule("difffrac",[/fraction/,/\(/,/d/,/\(/,/d/,"variable",/\)/,/\)/]),e.addRule("indefint",[/[\u222b]/,"prodquo"]),e.addRule("defint",[/[\u222b]/,/sub/,"atomic",/sup/,"atomic","prodquo"]),e.addRule("defint",[/[\u222b]/,/sup/,"atomic",/sub/,"atomic","prodquo"]),e.addRule("factor","differential"),e.addRule("factor","difffrac"),e.addRule("takesleftcoeff","indefint"),e.addRule("takesleftcoeff","defint"),e.addRule("sumdiff","takesleftcoeff"),e.addRule("sumdiff",["factor",/[\u00f7\u00d7\u00b7]/,"takesleftcoeff"]),e.addRule("sumdiff",["prodquo",/[+\u00b1\u2212-]/,"takesleftcoeff"]),e.addRule("noun","sumdiff"),e.addRule("noun","setdiff"),e.addRule("atomicsentence",["noun",/[=\u2260\u2248\u2243\u2264\u2265<>]/,"noun"]),e.addRule("atomicsentence",[/[\u00ac]/,"atomicsentence"]),e.addRule("sentence","atomicsentence"),e.addRule("sentence",[/[\u2234]/,"sentence"]),e.addRule("atomic",[/\(/,"noun",/\)/]),e.addRule("atomicsentence",[/\(/,"sentence",/\)/]),e.addRule("interval",[/[\(\[]/,"noun",/,/,"noun",/[\)\]]/]),e.addRule("atomic","interval"),e.addRule("absval",[/\|/,"noun",/\|/]),e.addRule("atomic","absval"),e.addRule("expression","noun"),e.addRule("expression","sentence"),i={"+":t.symbol("plus","arith1"),"-":t.symbol("minus","arith1"),"\u2212":t.symbol("minus","arith1"),"\xb1":t.symbol("plusminus","multiops"),"\xd7":t.symbol("times","arith1"),"\xb7":t.symbol("times","arith1"),"\xf7":t.symbol("divide","arith1"),"^":t.symbol("power","arith1"),"\u221e":t.symbol("infinity","nums1"),"\u221a":t.symbol("root","arith1"),"\u223c":t.symbol("set1","setdiff"),"=":t.symbol("eq","relation1"),"<":t.symbol("lt","relation1"),">":t.symbol("gt","relation1"),"\u2260":t.symbol("neq","relation1"),"\u2248":t.symbol("approx","relation1"),"\u2264":t.symbol("le","relation1"),"\u2265":t.symbol("ge","relation1"),"\u2243":t.symbol("modulo_relation","integer2"),"\xac":t.symbol("not","logic1"),"\u2218":t.symbol("degrees","units"),$:t.symbol("dollars","units"),"%":t.symbol("percent","units"),"\u222b":t.symbol("int","calculus1"),"def\u222b":t.symbol("defint","calculus1"),ln:t.symbol("ln","transc1"),log:t.symbol("log","transc1"),"unary-":t.symbol("unary_minus","arith1"),overarc:t.symbol("overarc","decoration"),overline:t.symbol("overline","decoration"),d:t.symbol("d","diff")},e.setOption("expressionBuilder",function(a){var n,r,u,d,s,c,f,m,b;return u=function(){var n,r,u,d,s;return u=1<=arguments.length?l.call(arguments,0):[],u=function(){var e,o,r;for(r=[],e=0,o=u.length;o>e;e++)n=u[e],"number"==typeof n&&(n=a[n]),i.hasOwnProperty(n)&&(n=i[n]),"string"==typeof n&&(n=t.decode(n)),r.push(n);return r}(),s=t.application.apply(t,u),e.expressionBuilderDebug&&(d=function(){var e,a,t;for(t=[],e=0,a=u.length;a>e;e++)r=u[e],t.push(r instanceof o?r.encode():""+r);return t}(),console.log.apply(console,["build"].concat(l.call(d),["-->"],[s]))),s},c=function(){var e,o;switch(a[0]){case"digit":case"nonnegint":return a.slice(1).join("");case"integer":return t.integer(parseInt(a.slice(1).join("")));case"float":return t["float"](parseFloat(""+a[1].value+a.slice(2).join("")));case"variable":return t.variable(a[1]);case"infinity":return i[a[1]];case"sumdiff":case"prodquo":switch(a.length){case 4:return u(2,1,3);case 3:return u("unary-",2)}break;case"factor":switch(a.length){case 4:return"\u2218"===a[3]?u("\xd7",1,i["\u2218"]):u("^",1,3);case 3:return"%"===a[2]?u("\xd7",1,i["%"]):u("\xd7",2,i.$)}break;case"fraction":return u("\xf7",3,4);case"root":switch(a.length){case 3:return u("\u221a",2,t.integer(2));case 5:return u("\u221a",4,2)}break;case"ln":return u("ln",2);case"log":switch(a.length){case 3:return u("log",t.integer(10),2);case 5:return u("log",3,4)}break;case"atomic":if(4===a.length&&"("===a[1]&&")"===a[3])return a[2];break;case"atomicsentence":switch(a.length){case 4:return u(2,1,3);case 3:return u(1,2)}break;case"decoration":return u(1,2);case"sentence":if("\u2234"===a[1])return a[2];break;case"interval":return s="("===a[1]?"o":"c",f=")"===a[5]?"o":"c",u(t.symbol("interval_"+s+f,"interval1"),2,4);case"absval":return u(t.symbol("abs","arith1"),2);case"trigapp":switch(a.length){case 3:return u(t.symbol(a[1],"transc1"),2);case 8:return u(t.symbol("arc"+a[1],"transc1"),7)}break;case"subscripted":return u(1,3);case"factorial":return u(t.symbol("factorial","integer1"),1);case"limit":return u(t.symbol("limit","limit1"),6,t.symbol("both_sides","limit1"),t.binding(t.symbol("lambda","fns1"),a[4],a[8]));case"sum":return e="sup"===a[2]?[6,8,3]:[4,6,9],b=e[0],d=e[1],m=e[2],u(t.symbol("sum","arith1"),t.application(t.symbol("interval","interval1"),a[d],a[m]),t.binding(t.symbol("lambda","fns1"),a[b],a[10]));case"differential":return u("d",2);case"difffrac":return u("\xf7","d",u("d",6));case"indefint":return u("\u222b",2);case"defint":return o="sup"===a[2]?[5,3]:[3,5],n=o[0],r=o[1],u("def\u222b",n,r,6)}}(),null==c&&(c=a[1]),e.expressionBuilderDebug&&console.log(a instanceof o?a.encode():""+a,"--->",c instanceof o?c.encode():c),c}),e.setOption("comparator",function(e,a){return null!=e&&"function"==typeof e.equals?e.equals(a):void 0})}).call(this);
//# sourceMappingURL=mathquill-parser-solo.min.js.map